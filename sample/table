#!/usr/bin/env ruby

require 'table'

def main(argv)
  subcommand = argv.shift
  case subcommand
  when 'help'
    usage(true)
  when 'json'
    main_json(argv)
  when 'yaml'
    main_yaml(argv)
  when nil
    err "usage: table subcommand args..."
  else
    err "unexpected subcommand: #{subcommand.inspect}"
  end
end

def usage(status)
  print <<'End'
usage: table subcommand args...

* table json file
* table yaml file
End
  exit status
end

def err(msg)
  STDERR.puts msg
  exit 1
end

def main_json(argv)
  require 'json'
  each_table_file(argv) {|tbl|
    ary = tbl.map {|rec| rec.to_h }
    puts JSON.pretty_generate(ary)
  }
end

def main_yaml(argv)
  require 'yaml'
  each_table_file(argv) {|tbl|
    ary = tbl.map {|rec| rec.to_h }
    YAML.dump(ary, STDOUT)
    puts
  }
end

def each_table_file(argv)
  argv.each {|filename|
    tbl = load_table(filename)
    yield tbl
  }
end

def load_table(filename)
  case filename
  when /\.csv\z/
    Table.load_csv(filename)
  when /\.tsv\z/
    Table.load_tsv(filename)
  else
    if filename == '-'
      content = STDIN.read
    else
      content = File.read(filename)
    end
    if /\n/ =~ content
      firstline = $`
      if /,/ =~ firstline
        return Table.parse_csv(content)
      elsif /\t/ =~ firstline
        return Table.parse_tsv(content)
      end
    else
    end
    raise "unknown file extension: #{filename.inspect}"
  end
end

main ARGV
